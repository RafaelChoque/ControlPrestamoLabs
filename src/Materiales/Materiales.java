/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Materiales;

import ConexionLogin.Conexion;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Erlan
 */
public class Materiales extends javax.swing.JFrame {

    private String categoriaSeleccionada;

    /**
     * Creates new form MaterialesHardware
     */
    public Materiales() {
        initComponents();
        cargarTablaTodo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Categoria = new javax.swing.JLabel();
        btnRedes = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        btnTelecomunicaciones = new javax.swing.JButton();
        btnElectronica = new javax.swing.JButton();
        MostrarTodo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnHabilitarDeshabilitar = new javax.swing.JButton();
        Codigo = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnVerLaboratorios = new javax.swing.JButton();
        Laboratorio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        NumeroSerie = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TipoEquipo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Unidades = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMateriales = new javax.swing.JTable();
        FondoBlanco = new javax.swing.JLabel();
        perfil = new javax.swing.JLabel();
        btnMenu = new javax.swing.JButton();
        Superior = new javax.swing.JLabel();
        FondoGris1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBackground(new java.awt.Color(233, 236, 239));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField1.setText("Buscar ID");
        jTextField1.setToolTipText("");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 90, 20));
        String placeholder = "Buscar ID";
        jTextField1.setText(placeholder);
        jTextField1.setForeground(Color.GRAY);
        jTextField1.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (jTextField1.getText().equals(placeholder)) {
                    jTextField1.setText("");
                    jTextField1.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (jTextField1.getText().isEmpty()) {
                    jTextField1.setText(placeholder);
                    jTextField1.setForeground(Color.GRAY);
                }
            }
        });
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterTable();
            }
            private void filterTable() {
                String query = jTextField1.getText().toLowerCase();
                if (query.equals(placeholder.toLowerCase())) {
                    tblMateriales.setRowSorter(null);
                    return;
                }
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(tblMateriales.getModel());
                tblMateriales.setRowSorter(sorter);
                if (query.trim().isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter(query, 0)); // Filtra por columna 0 (ID)
                }
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_1.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 190, 40));

        jLabel1.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel1.setText("Materiales");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(194, 194, 194)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Categoria.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        Categoria.setText("Categoria");
        jPanel3.add(Categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        btnRedes.setBackground(new java.awt.Color(29, 41, 57));
        btnRedes.setForeground(new java.awt.Color(255, 255, 255));
        btnRedes.setText("Redes");
        btnRedes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedesActionPerformed(evt);
            }
        });
        jPanel3.add(btnRedes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 140, -1));

        Limpiar.setBackground(new java.awt.Color(255, 0, 0));
        Limpiar.setForeground(new java.awt.Color(255, 255, 255));
        Limpiar.setText("Limpiar");
        Limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        jPanel3.add(Limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        btnTelecomunicaciones.setBackground(new java.awt.Color(29, 41, 57));
        btnTelecomunicaciones.setForeground(new java.awt.Color(255, 255, 255));
        btnTelecomunicaciones.setText("Telecomunicaciones");
        btnTelecomunicaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTelecomunicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelecomunicacionesActionPerformed(evt);
            }
        });
        jPanel3.add(btnTelecomunicaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 140, -1));

        btnElectronica.setBackground(new java.awt.Color(29, 41, 57));
        btnElectronica.setForeground(new java.awt.Color(255, 255, 255));
        btnElectronica.setText("Electronica");
        btnElectronica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnElectronica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElectronicaActionPerformed(evt);
            }
        });
        jPanel3.add(btnElectronica, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 140, -1));

        MostrarTodo.setBackground(new java.awt.Color(29, 41, 57));
        MostrarTodo.setForeground(new java.awt.Color(255, 255, 255));
        MostrarTodo.setText("Mostrar Todo");
        MostrarTodo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MostrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarTodoActionPerformed(evt);
            }
        });
        jPanel3.add(MostrarTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 370, 170, 200));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(194, 194, 194)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel8.setText("Datos");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 30));

        jLabel4.setText("Codigo:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 20));

        btnGuardar.setBackground(new java.awt.Color(29, 41, 57));
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Agregar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        btnModificar.setBackground(new java.awt.Color(29, 41, 57));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, -1, -1));

        btnLimpiar.setBackground(new java.awt.Color(29, 41, 57));
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, -1, -1));

        btnHabilitarDeshabilitar.setBackground(new java.awt.Color(29, 41, 57));
        btnHabilitarDeshabilitar.setForeground(new java.awt.Color(255, 255, 255));
        btnHabilitarDeshabilitar.setText("Habilitar/Deshabilitar");
        btnHabilitarDeshabilitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHabilitarDeshabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilitarDeshabilitarActionPerformed(evt);
            }
        });
        jPanel1.add(btnHabilitarDeshabilitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));
        jPanel1.add(Codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 410, -1));

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 10, -1));

        jLabel6.setText("Laboratorio");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        btnVerLaboratorios.setText("Ver Laboratorios");
        btnVerLaboratorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerLaboratoriosActionPerformed(evt);
            }
        });
        jPanel1.add(btnVerLaboratorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));
        jPanel1.add(Laboratorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 410, -1));

        jLabel3.setText("Numero de Serie");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, 20));
        jPanel1.add(NumeroSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 410, -1));

        jLabel7.setText("Tipo de Equipo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        jPanel1.add(TipoEquipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 410, 20));

        jLabel9.setText("Unidades");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        jPanel1.add(Unidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 410, -1));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 100, 550, 260));

        tblMateriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Codigo", "Tipo de Equipo", "Numero de Serie", "Estado", "Categoria", "Laboratorio", "Unidades"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMateriales.setToolTipText("");
        tblMateriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMaterialesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMateriales);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 840, 650));

        FondoBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_2.png"))); // NOI18N
        jPanel2.add(FondoBlanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1450, 740));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 1480, 770));

        perfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconouser.png"))); // NOI18N
        getContentPane().add(perfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(1480, 10, 40, -1));

        btnMenu.setBackground(new java.awt.Color(178, 191, 207));
        btnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BotonBurger3.png"))); // NOI18N
        btnMenu.setBorder(null);
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 15, 30, 30));

        Superior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SuperiorInterfaz.png"))); // NOI18N
        getContentPane().add(Superior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 60));

        FondoGris1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_3.png"))); // NOI18N
        FondoGris1.setMaximumSize(new java.awt.Dimension(1540, 863));
        FondoGris1.setMinimumSize(new java.awt.Dimension(1540, 863));
        FondoGris1.setPreferredSize(new java.awt.Dimension(1540, 863));
        getContentPane().add(FondoGris1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, -60, 1680, 920));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
private void limpiar() {
    Codigo.setText("");
    TipoEquipo.setText("");
    NumeroSerie.setText("");
    Laboratorio.setText("");
    categoriaSeleccionada = "";
}

private void cargarTablaPorCategoria() {
    DefaultTableModel modelo = (DefaultTableModel) tblMateriales.getModel();
    modelo.setRowCount(0);
    if (categoriaSeleccionada == null || categoriaSeleccionada.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Seleccione una categoría válida.");
        return;
    }
    try (Connection con = Conexion.obtenerConexion()) {
        // Cambiar la consulta para incluir la sección de laboratorios
        PreparedStatement ps = con.prepareStatement("SELECT m.id_material, m.nombre, m.tipo_equipo, m.numero_serie, m.estado, m.ID_lab, m.unidades, l.seccion "
                                                   + "FROM materiales m "
                                                   + "JOIN laboratorios l ON m.ID_lab = l.ID_lab "
                                                   + "WHERE l.seccion = ?");
        ps.setString(1, categoriaSeleccionada);  // Aquí se usa la sección como categoría
        try (ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("id_material"),
                rs.getString("nombre"),
                rs.getString("tipo_equipo"),
                rs.getString("numero_serie"),
                rs.getString("estado"),
                rs.getString("seccion"),
                rs.getString("unidades"),
                rs.getString("ID_lab")  // Cargar la sección
                };
                modelo.addRow(fila);
            }
        }
    } catch (SQLException ex) {
        System.out.println(ex.toString());
    }
}


private void cargarTablaTodo() {
    DefaultTableModel modelo = (DefaultTableModel) tblMateriales.getModel();
    modelo.setRowCount(0);
    try {
        Connection con = Conexion.obtenerConexion();
        PreparedStatement ps = con.prepareStatement("SELECT m.id_material, m.nombre, m.tipo_equipo, m.numero_serie, m.estado, m.ID_lab, m.unidades, l.seccion "
                                                   + "FROM materiales m "
                                                   + "JOIN laboratorios l ON m.ID_lab = l.ID_lab");
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            Object[] fila = {
                rs.getInt("id_material"),
                rs.getString("nombre"),
                rs.getString("tipo_equipo"),
                rs.getString("numero_serie"),
                rs.getString("estado"),
                rs.getString("seccion"),
                rs.getString("unidades"),
                rs.getString("ID_lab")
            };
            modelo.addRow(fila);
        }
    } catch (SQLException ex) {
        System.out.println(ex.toString());
    }
}





    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed

    }//GEN-LAST:event_btnMenuActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      String codigoText = Codigo.getText();
    String tipoEquipoText = TipoEquipo.getText();
    String NumSerieText = NumeroSerie.getText();
    String laboratorioText = Laboratorio.getText();
    String unidadesText = Unidades.getText();  // Suponiendo que tienes un campo para unidades

    if (codigoText.isEmpty() || tipoEquipoText.isEmpty() || NumSerieText.isEmpty() || laboratorioText.isEmpty() || unidadesText.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor rellene todos los campos.");
        return;
    }

    try {
        Connection con = Conexion.obtenerConexion();
        PreparedStatement ps = con.prepareStatement(
                "INSERT INTO materiales (nombre, tipo_equipo, numero_serie, estado, ID_lab, unidades) VALUES (?, ?, ?, ?, ?, ?)"
        );
        ps.setString(1, codigoText);      // nombre
        ps.setString(2, tipoEquipoText);  // tipo_equipo
        ps.setString(3, NumSerieText);    // numero_serie
        ps.setString(4, "Disponible");    // estado (valor válido del ENUM)
        ps.setString(5, laboratorioText); // ID_lab
        ps.setInt(6, Integer.parseInt(unidadesText)); // unidades (convertir a int)

        ps.executeUpdate();

        JOptionPane.showMessageDialog(null, "Material registrado correctamente.");
        cargarTablaTodo();
        limpiar();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar: " + e.toString());
    }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
    String id = txtID.getText();
    String nombre = Codigo.getText();
    String tipo = TipoEquipo.getText();
    String serie = NumeroSerie.getText();
    String laboratorio = Laboratorio.getText();
    String unidades = Unidades.getText();  // Obtén el valor de unidades

    if (id.isEmpty() || nombre.isEmpty() || tipo.isEmpty() || serie.isEmpty() || laboratorio.isEmpty() || unidades.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor seleccione un material y complete todos los campos.");
        return;
    }

    try {
        Connection con = Conexion.obtenerConexion();
        PreparedStatement ps = con.prepareStatement(
                "UPDATE materiales SET nombre=?, tipo_equipo=?, numero_serie=?, ID_lab=?, unidades=? WHERE id_material=?"
        );
        ps.setString(1, nombre);
        ps.setString(2, tipo);
        ps.setString(3, serie);
        ps.setString(4, laboratorio);
        ps.setString(5, unidades);  // Actualiza el valor de unidades
        ps.setInt(6, Integer.parseInt(id));

        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Material actualizado correctamente.");
        cargarTablaTodo();
        limpiar();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar: " + e.toString());
    }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String id = txtID.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un material.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar este material?", "Confirmar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection con = Conexion.obtenerConexion();
                PreparedStatement ps = con.prepareStatement("DELETE FROM materiales WHERE id_material=?");
                ps.setInt(1, Integer.parseInt(id));
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Material eliminado correctamente.");
                cargarTablaTodo();
                limpiar();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar: " + e.toString());
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnHabilitarDeshabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilitarDeshabilitarActionPerformed
        int fila = tblMateriales.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un material.");
            return;
        }

        int materialId = Integer.parseInt(tblMateriales.getValueAt(fila, 0).toString());

        try {
            Connection con = Conexion.obtenerConexion();

            // Obtenemos el estado actual del material
            PreparedStatement psObtenerEstado = con.prepareStatement("SELECT estado FROM materiales WHERE id_material = ?");
            psObtenerEstado.setInt(1, materialId);
            ResultSet rsEstado = psObtenerEstado.executeQuery();

            if (!rsEstado.next()) {
                JOptionPane.showMessageDialog(null, "Error al encontrar el material.");
                return;
            }

            String estadoActual = rsEstado.getString("estado");
            System.out.println("Estado actual del material: " + estadoActual);  // Depuración para ver el estado actual

            String nuevoEstado;
            // Cambiamos el estado según el valor actual
            if ("Disponible".equals(estadoActual)) {
                nuevoEstado = "Mantenimiento";  // Si está disponible, se pasa a mantenimiento
            } else if ("Mantenimiento".equals(estadoActual)) {
                nuevoEstado = "Disponible";  // Si está en mantenimiento, se pasa a disponible
            } else {
                nuevoEstado = estadoActual;  // En caso de que el estado no sea ni "Disponible" ni "Mantenimiento"
            }

            // Depurar el valor que se va a actualizar
            System.out.println("Nuevo estado: " + nuevoEstado);  // Depuración para ver el nuevo estado

            // Verificamos que el valor de nuevoEstado sea correcto
            if (!"Disponible".equals(nuevoEstado) && !"Mantenimiento".equals(nuevoEstado)) {
                JOptionPane.showMessageDialog(null, "Estado inválido. Solo 'Disponible' o 'Mantenimiento' son permitidos.");
                return;
            }

            // Actualizamos el estado del material
            PreparedStatement psActualizarEstado = con.prepareStatement("UPDATE materiales SET estado = ? WHERE id_material = ?");
            psActualizarEstado.setString(1, nuevoEstado);
            psActualizarEstado.setInt(2, materialId);
            psActualizarEstado.executeUpdate();

            // Mostramos un mensaje según el nuevo estado
            String mensaje = "Material ahora está en estado de " + nuevoEstado.toLowerCase() + ".";
            JOptionPane.showMessageDialog(null, mensaje);

            cargarTablaPorCategoria();  // Recargamos la tabla para reflejar el cambio de estado

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnHabilitarDeshabilitarActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void tblMaterialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMaterialesMouseClicked
    try {
        // Obtener la fila seleccionada
        int fila = tblMateriales.getSelectedRow();

        // Asegurarse de que se ha seleccionado una fila válida
        if (fila != -1) {
            // Obtener el ID del material seleccionado
            int id = Integer.parseInt(tblMateriales.getValueAt(fila, 0).toString());

            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.obtenerConexion();

            // Consulta para obtener los detalles del material
            ps = con.prepareStatement("SELECT m.nombre, m.tipo_equipo, m.numero_serie, m.estado, l.ID_lab, m.unidades, l.seccion FROM materiales m JOIN laboratorios l ON m.ID_lab = l.ID_lab WHERE id_material=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                Codigo.setText(rs.getString("nombre"));
                TipoEquipo.setText(rs.getString("tipo_equipo"));
                NumeroSerie.setText(rs.getString("numero_serie"));
                Categoria.setText(rs.getString("seccion"));  // Carga la sección desde laboratorios
                Laboratorio.setText(rs.getString("ID_lab"));
                Unidades.setText(rs.getString("unidades"));  // Carga el valor de unidades
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.toString());
    }
    }//GEN-LAST:event_tblMaterialesMouseClicked

    private void btnRedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedesActionPerformed
        categoriaSeleccionada = "Redes";
        cargarTablaPorCategoria();
    }//GEN-LAST:event_btnRedesActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LimpiarActionPerformed

    private void btnTelecomunicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelecomunicacionesActionPerformed
        categoriaSeleccionada = "Telecomunicaciones";
        cargarTablaPorCategoria();
    }//GEN-LAST:event_btnTelecomunicacionesActionPerformed

    private void btnElectronicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElectronicaActionPerformed
        categoriaSeleccionada = "Electronica";
        cargarTablaPorCategoria();
    }//GEN-LAST:event_btnElectronicaActionPerformed

    private void MostrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarTodoActionPerformed
        cargarTablaTodo();
    }//GEN-LAST:event_MostrarTodoActionPerformed

    private void btnVerLaboratoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerLaboratoriosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerLaboratoriosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Materiales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Materiales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Materiales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Materiales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Materiales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Categoria;
    private javax.swing.JTextField Codigo;
    private javax.swing.JLabel FondoBlanco;
    private javax.swing.JLabel FondoGris1;
    private javax.swing.JTextField Laboratorio;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton MostrarTodo;
    private javax.swing.JTextField NumeroSerie;
    private javax.swing.JLabel Superior;
    private javax.swing.JTextField TipoEquipo;
    private javax.swing.JTextField Unidades;
    private javax.swing.JButton btnElectronica;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnHabilitarDeshabilitar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRedes;
    private javax.swing.JButton btnTelecomunicaciones;
    private javax.swing.JButton btnVerLaboratorios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel perfil;
    private javax.swing.JTable tblMateriales;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
