package TecnicoDePrestamos;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rafael
 */
import ConexionLogin.Conexion;
import com.formdev.flatlaf.FlatLightLaf;
import java.sql.Connection;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
public class SolicitudPendiente extends javax.swing.JFrame {

    /**
     * Creates new form SolicitudesLabs
     */
    public SolicitudPendiente() {
        initComponents();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaSolicitudes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        AprobarSolicitud = new javax.swing.JButton();
        RechazarSolicitud = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MotivoRechazo = new javax.swing.JTextArea();
        VerHorarios = new javax.swing.JButton();
        motivoRechazo = new javax.swing.JLabel();
        Superior = new javax.swing.JLabel();
        FondoBlanco = new javax.swing.JLabel();
        Izquierda = new javax.swing.JLabel();
        FondoGris1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaSolicitudes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Laboratorio", "Docente", "Motivo", "Fecha", "Horario Inicio", "Horario Fin", "Estado", "Motivo del Rechazo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaSolicitudes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, 1200, -1));

        jLabel1.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel1.setText("SOLICITUDES PENDIENTES");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        AprobarSolicitud.setText("Aprobar");
        AprobarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AprobarSolicitudActionPerformed(evt);
            }
        });
        getContentPane().add(AprobarSolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, -1, -1));

        RechazarSolicitud.setText("Rechazar");
        RechazarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechazarSolicitudActionPerformed(evt);
            }
        });
        getContentPane().add(RechazarSolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, -1, -1));

        MotivoRechazo.setColumns(20);
        MotivoRechazo.setRows(5);
        jScrollPane2.setViewportView(MotivoRechazo);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 400, 190));

        VerHorarios.setText("Ver Horarios");
        getContentPane().add(VerHorarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, -1, -1));

        motivoRechazo.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        motivoRechazo.setText("Motivo del Rechazo");
        getContentPane().add(motivoRechazo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, -1, -1));

        Superior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SuperiorInterfaz.png"))); // NOI18N
        getContentPane().add(Superior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 60));

        FondoBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_2.png"))); // NOI18N
        getContentPane().add(FondoBlanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 1250, 760));

        Izquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Recuadro azul.png"))); // NOI18N
        getContentPane().add(Izquierda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 870));

        FondoGris1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_3.png"))); // NOI18N
        getContentPane().add(FondoGris1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1680, 920));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarTabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaSolicitudes.getModel();
        modeloTabla.setRowCount(0);

        try {
            Connection con = Conexion.obtenerConexion();
            PreparedStatement ps = con.prepareStatement(
                "SELECT p.id_prestamo, l.Nombre_lab, CONCAT(pa.nombre, ' ', pa.apellido) AS nombre_completo, "
                + "p.motivo, p.fecha, p.horario_inicio, p.horario_fin, p.estado, p.motivo_rechazo "
                + "FROM prestamos p "
                + "INNER JOIN laboratorios l ON p.ID_lab = l.ID_lab "
                + "INNER JOIN personal_academico pa ON p.id_personal_academico = pa.id_personal_academico"
            );

            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("id_prestamo"),
                    rs.getString("Nombre_lab"),
                    rs.getString("nombre_completo"),
                    rs.getString("motivo"),
                    rs.getDate("fecha"),
                    rs.getTime("horario_inicio"),
                    rs.getTime("horario_fin"),
                    rs.getString("estado"),
                    rs.getString("motivo_rechazo")
                };
                modeloTabla.addRow(fila);
            }

            rs.close();
            ps.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar solicitudes: " + ex.getMessage());
        }
    }

    private void AprobarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AprobarSolicitudActionPerformed
        int fila = TablaSolicitudes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una solicitud para aprobar.");
            return;
        }

        try {
            int idSolicitud = Integer.parseInt(TablaSolicitudes.getValueAt(fila, 0).toString());
            Connection con = Conexion.obtenerConexion();
            PreparedStatement ps = con.prepareStatement("UPDATE prestamos SET estado = 'Aprobado' WHERE id_prestamo = ?");
            ps.setInt(1, idSolicitud);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Solicitud aprobada correctamente.");
            cargarTabla();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al aprobar la solicitud: " + ex.getMessage());
        }  
    }//GEN-LAST:event_AprobarSolicitudActionPerformed

    private void RechazarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechazarSolicitudActionPerformed
        int fila = TablaSolicitudes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una solicitud para rechazar.");
            return;
        }

        String motivo = MotivoRechazo.getText().trim();
        if (motivo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un motivo para rechazar la solicitud.");
            return;
        }

        try {
            int idSolicitud = Integer.parseInt(TablaSolicitudes.getValueAt(fila, 0).toString());
            Connection con = Conexion.obtenerConexion();
            PreparedStatement ps = con.prepareStatement(
                    "UPDATE prestamos SET estado = 'Rechazado', motivo_rechazo = ? WHERE id_prestamo = ?"
            );
            ps.setString(1, motivo);
            ps.setInt(2, idSolicitud);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Solicitud rechazada correctamente.");
            MotivoRechazo.setText("");
            cargarTabla();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al rechazar la solicitud: " + ex.getMessage());
        }
    }//GEN-LAST:event_RechazarSolicitudActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e){
            e.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SolicitudPendiente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AprobarSolicitud;
    private javax.swing.JLabel FondoBlanco;
    private javax.swing.JLabel FondoGris1;
    private javax.swing.JLabel Izquierda;
    private javax.swing.JTextArea MotivoRechazo;
    private javax.swing.JButton RechazarSolicitud;
    private javax.swing.JLabel Superior;
    private javax.swing.JTable TablaSolicitudes;
    private javax.swing.JButton VerHorarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel motivoRechazo;
    // End of variables declaration//GEN-END:variables
}
