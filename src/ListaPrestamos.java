
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import java.sql.Connection;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rafael
 */
public class ListaPrestamos extends javax.swing.JFrame {

    /**
     * Creates new form GestionEquipos
     */
    public ListaPrestamos() {
        initComponents();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPrestamos = new javax.swing.JTable();
        LogoSale = new javax.swing.JLabel();
        ListadePrestamos = new javax.swing.JLabel();
        Superior = new javax.swing.JLabel();
        Izquierda = new javax.swing.JLabel();
        BuscarSolicitudes = new javax.swing.JButton();
        AgregarPrestamo = new javax.swing.JButton();
        ActualizarTabla = new javax.swing.JButton();
        FondoGris1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Laboratorio", "Docente", "Motivo", "Fecha de Inicio", "Fecha de Fin", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaPrestamos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 710, -1));

        LogoSale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logosaleint.png"))); // NOI18N
        getContentPane().add(LogoSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 170, 60));

        ListadePrestamos.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        ListadePrestamos.setText("Historial de Prestamos");
        getContentPane().add(ListadePrestamos, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, -1, -1));

        Superior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SuperiorInterfaz.png"))); // NOI18N
        getContentPane().add(Superior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 80));

        Izquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Recuadro azul.png"))); // NOI18N
        getContentPane().add(Izquierda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 870));

        BuscarSolicitudes.setText("Buscar Solicitudes");
        BuscarSolicitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarSolicitudesActionPerformed(evt);
            }
        });
        getContentPane().add(BuscarSolicitudes, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 130, -1, -1));

        AgregarPrestamo.setText("Agregar Prestamo");
        AgregarPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPrestamoActionPerformed(evt);
            }
        });
        getContentPane().add(AgregarPrestamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 450, -1, -1));

        ActualizarTabla.setText("Actualizar Tabla");
        ActualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarTablaActionPerformed(evt);
            }
        });
        getContentPane().add(ActualizarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 640, -1, -1));

        FondoGris1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo_3.png"))); // NOI18N
        getContentPane().add(FondoGris1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1680, 920));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarTabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaPrestamos.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        int[] anchos = {10, 100, 100, 150, 90, 90, 60};
        for (int i = 0; i < TablaPrestamos.getColumnCount(); i++) {
            TablaPrestamos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        try {
            Connection con = Conexion.obtenerConexion();

            ps = con.prepareStatement(
            "s"
            );
            
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
                Object[] fila = new Object[columnas];
                for(int i = 0; i<columnas; i++){
                    fila[i] =rs.getObject(i+1);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla: " + ex.getMessage());
        }
    }
    private boolean haySolicitudesPendientes() {
        boolean pendiente = false;
        try {
            Connection con = Conexion.obtenerConexion();
            PreparedStatement ps = con.prepareStatement(
                    "SELECT COUNT(*) FROM prestamos WHERE estado = 'Pendiente'"
            );
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                pendiente = rs.getInt(1) > 0; 
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al obtener solicitudes pendientes: " + ex.getMessage());
        }
        return pendiente;
    }
    private void actualizarColorBotonSolicitud() {
        if (haySolicitudesPendientes()) {
            // Cambia el color del botón a rojo si hay solicitudes pendientes
            BuscarSolicitudes.setBackground(Color.RED);
            BuscarSolicitudes.setText("¡Solicitudes Pendientes!");
        } else {
            // Vuelve al color original si no hay solicitudes pendientes
            BuscarSolicitudes.setBackground(UIManager.getColor("Button.background"));
            BuscarSolicitudes.setText("Buscar Solicitudes");
        }
    }
    private void BuscarSolicitudesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarSolicitudesActionPerformed
     SolicitudPendiente solicitudpendientes = new SolicitudPendiente();
     solicitudpendientes.setVisible(true);
     
    }//GEN-LAST:event_BuscarSolicitudesActionPerformed

    private void AgregarPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPrestamoActionPerformed
        
    }//GEN-LAST:event_AgregarPrestamoActionPerformed

    private void ActualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarTablaActionPerformed
        cargarTabla();
        actualizarColorBotonSolicitud();
    }//GEN-LAST:event_ActualizarTablaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e){
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListaPrestamos frame = new ListaPrestamos();
                frame.setVisible(true);
                frame.actualizarColorBotonSolicitud(); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarTabla;
    private javax.swing.JButton AgregarPrestamo;
    private javax.swing.JButton BuscarSolicitudes;
    private javax.swing.JLabel FondoGris1;
    private javax.swing.JLabel Izquierda;
    private javax.swing.JLabel ListadePrestamos;
    private javax.swing.JLabel LogoSale;
    private javax.swing.JLabel Superior;
    private javax.swing.JTable TablaPrestamos;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
